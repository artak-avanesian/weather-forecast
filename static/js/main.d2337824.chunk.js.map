{"version":3,"sources":["reducers/weatherDataReducer.js","reducers/weeklyForecastReducer.js","reducers/citiesReducer.js","store/rootReducer.js","App/DailyForecast/DetailForecast/DetailForecast.js","App/DailyForecast/DailyForecast.js","App/WeeklyForecast/Loader/Loader.js","App/WeeklyForecast/ForecastTable/ForecastTable.js","App/WeeklyForecast/WeeklyForecast.js","App/App.js","index.js"],"names":["weatherDataReducer","state","arguments","length","undefined","action","type","weatherData","weeklyForecastReducer","weeklyForecastData","citiesReducer","push","city","shift","rootReducer","cityWeatherData","cities","connect","_ref","message","react_default","a","createElement","className","name","sys","country","weather","description","Math","round","main","temp","pressure","humidity","temp_min","temp_max","visibility","wind","speed","clouds","all","react_router_dom","to","DailyForecast","value","getLastCities","_this","props","toLowerCase","indexOf","addCity","valueChangeHandler","event","setState","target","handlerKeyPress","_callee","regenerator_default","wrap","_context","prev","next","key","fetchWeatherData","stop","showCityForecast","_callee2","array","index","currentCity","_context2","filter","item","i","fetch","concat","then","resp","json","catch","error","console","log","this","getWeatherData","_this2","_this$props","deleteCity","placeholder","onChange","onKeyPress","map","onClick","DailyForecast_DetailForecast_DetailForecast","Component","dispatch","data","Loader","ForecastTable","getDayOfWeek","getDate","getPrecipitationData","scope","WeeklyForecast","getWeekdayData","num","date","Date","setDate","toLocaleString","weekday","month","day","toUpperCase","obj","snow","id","week","getWeeklyForecastData","WeeklyForecast_Loader_Loader","weatherDataForWeek","WeeklyForecast_ForecastTable_ForecastTable","withRouter","App","react_router","path","exact","component","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2337824.chunk.js","sourcesContent":["const weatherDataReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case \"GET_WEATHER_DATA\":\r\n            return action.weatherData\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weatherDataReducer","const weeklyForecastReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_WEEKLY_FORECAST_DATA\":\r\n            return action.weeklyForecastData\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weeklyForecastReducer","const citiesReducer = (state=[], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_CITY\":\r\n            state.push(action.city)\r\n            return state\r\n        case \"DELETE_CITY\":\r\n            state.shift()\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default citiesReducer","import weatherDataReducer from './../reducers/weatherDataReducer'\r\nimport weeklyForecastReducer from './../reducers/weeklyForecastReducer'\r\nimport citiesReducer from './../reducers/citiesReducer'\r\n\r\nconst rootReducer = (state={}, action) => {\r\n    return {\r\n        cityWeatherData: weatherDataReducer(state.cityWeatherData, action),\r\n        weeklyForecastData: weeklyForecastReducer(state.weeklyForecastData, action),\r\n        cities: citiesReducer(state.cities, action)\r\n    }  \r\n}\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailForecast.css';\r\n\r\nconst DetailForecast = ({\r\n    weatherData,\r\n}) => {\r\n    if (weatherData.message === 'city not found') {\r\n        return (\r\n            <p>City ​​name is invalid. Please, try again.</p>\r\n        )   \r\n    }\r\n    return (\r\n        <div className='detail-forecast'>\r\n            <p className='city'>{weatherData.name}, {weatherData.sys.country}</p>\r\n            <p className='weather-description'>{weatherData.weather[0].description}</p>\r\n            <p className='temperature'>{Math.round(weatherData.main.temp - 273.15)}&#176;</p>\r\n            <div className='flex-container'>\r\n                <p>\r\n                    <span className='bold'>Pressure:</span><br/>\r\n                    <span className='glyph pressure'>N</span><br/>\r\n                    {weatherData.main.pressure} mb\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Humidity:</span><br/>\r\n                    <span className='glyph humidity'>C</span><br/> \r\n                    {weatherData.main.humidity} %\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Lowest temp.:</span><br/>\r\n                    <span className='glyph low-temp'>L</span><br/> \r\n                    {Math.round(weatherData.main.temp_min - 273.15)} &#176;C\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Highest temp.:</span><br/>\r\n                    <span className='glyph high-temp'>L</span><br/> \r\n                    {Math.round(weatherData.main.temp_max - 273.15)} &#176;C\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Visibility:</span><br/>\r\n                    <span className='glyph'>B</span><br/> \r\n                    {Math.round(weatherData.visibility / 1000)} km\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Wind:</span><br/>\r\n                    <span className='glyph wind'>I</span><br/> \r\n                    {weatherData.wind.speed} km/h\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Cloudiness:</span><br/>\r\n                    <span className='glyph cloudiness'>A</span><br/> \r\n                    {weatherData.clouds.all} %\r\n                </p>\r\n            </div>\r\n            <Link to={`/weekly-forecast`} className='show-weekly-forecast'>Show weekly forecast</Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    weatherData: state.cityWeatherData\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(DetailForecast)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DetailForecast from './DetailForecast/DetailForecast';\r\nimport './DailyForecast.css';\r\n\r\nconst API_KEY = '3202afc9748ff0709631c6435eeefc3a';\r\n\r\nclass DailyForecast extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    async fetchWeatherData(city) {\r\n        const weatherData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\r\n            .then(resp => resp.json())\r\n            .catch(error => console.log(error.message));\r\n\r\n        this.props.getWeatherData(weatherData)\r\n    }\r\n\r\n    getLastCities = () => {\r\n        if(this.props.weatherData.name && (this.props.weatherData.name.toLowerCase().indexOf(this.state.value.toLowerCase()) !== -1)) {\r\n            if (this.props.cities.indexOf(this.state.value) === -1) {\r\n                this.props.addCity(this.state.value)\r\n            }\r\n        }\r\n    };\r\n\r\n    valueChangeHandler = event => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    };\r\n\r\n    handlerKeyPress = async event => {\r\n        if (event.key === 'Enter' && this.state.value) {\r\n            await this.fetchWeatherData(this.state.value);\r\n            await this.getLastCities();\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    showCityForecast = async (array, index) => {\r\n        const currentCity = array.filter((item, i) => {\r\n            return i === index\r\n        });\r\n        await this.fetchWeatherData(currentCity)\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            weatherData,\r\n            cities,\r\n            deleteCity\r\n        } = this.props;\r\n\r\n        if (cities.length > 5) {\r\n            deleteCity()\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"input-group mt-3 mb-3\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder='City name'\r\n                        value={this.state.value}\r\n                        onChange={this.valueChangeHandler}\r\n                        onKeyPress={this.handlerKeyPress}\r\n                    />\r\n                </div>\r\n                <ul className='city-list'>\r\n                    {\r\n                        cities.map((city, index) => (\r\n                            <li key={city} onClick={() => this.showCityForecast(cities, index)}>{city.toLowerCase()}\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul> \r\n            {\r\n                weatherData && weatherData.message !== 'Nothing to geocode' ? <DetailForecast/> : null\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weatherData: state.cityWeatherData,\r\n        cities: state.cities\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getWeatherData: data => dispatch({\r\n        type: \"GET_WEATHER_DATA\",\r\n        weatherData: data\r\n    }),\r\n    addCity: city => dispatch({\r\n        type: \"ADD_CITY\",\r\n        city\r\n    }),\r\n    deleteCity: () => dispatch({\r\n        type: \"DELETE_CITY\"\r\n    }),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DailyForecast)","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => (\r\n    <div className='loader-wrap'>\r\n        <div className=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader","import React from 'react';\r\nimport './ForecastTable.css';\r\n\r\nconst ForecastTable = ({\r\n    weatherData,\r\n    getDayOfWeek,\r\n    getDate,\r\n    getPrecipitationData\r\n}) => (\r\n        <table className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Day</th>\r\n                    <th scope=\"col\">Temperature<span className='table-glyph'>L</span></th>\r\n                    <th scope=\"col\">Pressure<span className='table-glyph pressure'>N</span></th>\r\n                    <th scope=\"col\">Humidity<span className='table-glyph humidity'>C</span></th>\r\n                    <th scope=\"col\">Wind<span className='table-glyph wind'>I</span></th>\r\n                    <th scope=\"col\">Precipitation<span className='glyph3'>A</span></th>\r\n                    <th scope=\"col\">Cloudiness<span className='table-glyph cloudiness'>A</span></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    weatherData.map((item, index) => (\r\n                        <tr key={index} className='tab-row'>\r\n                            <th>{getDayOfWeek(index)}\r\n                                <small>{getDate(index)}</small><br/>\r\n                                <small>{item['weather'][0]['description']}</small>\r\n                            </th>\r\n                            <td>{Math.round(item['main']['temp'] - 273.15)}&#176;</td>\r\n                            <td>{Math.round(item['main']['pressure'])} mb</td>\r\n                            <td>{item['main']['humidity']} %</td>\r\n                            <td>{item['wind']['speed']} km/h</td>\r\n                            <td>{getPrecipitationData(item)} cm</td>\r\n                            <td>{item['clouds']['all']} %</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n\r\nexport default ForecastTable","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loader from \"./Loader/Loader\";\r\nimport ForecastTable from './ForecastTable/ForecastTable';\r\nimport './WeeklyForecast.css';\r\n\r\nconst API_KEY = '3202afc9748ff0709631c6435eeefc3a';\r\n\r\nclass WeeklyForecast extends Component {\r\n\r\n    async componentDidMount() {\r\n        const id = this.props.weatherData !== null ? this.props.weatherData.id : '000000';\r\n        const week = await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${id}&appid=${API_KEY}`)\r\n            .then(resp => resp.json())\r\n            .catch(error => console.log(error.name));\r\n        this.props.getWeeklyForecastData(week)\r\n    };\r\n\r\n    getWeekdayData = (num) => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() + num + 1);\r\n        return new Date(date)\r\n    };\r\n\r\n    getDayOfWeek = (num) => {\r\n        let options = {\r\n            weekday: 'long',\r\n        };\r\n        return this.getWeekdayData(num).toLocaleString('en-US', options);\r\n    };\r\n\r\n    getDate = (num) => {\r\n        let options = {\r\n            month: 'short',\r\n            day: 'numeric'\r\n        };\r\n        return this.getWeekdayData(num).toLocaleString('en-US', options).toUpperCase()\r\n    };\r\n\r\n    getPrecipitationData = (obj) => {\r\n        if (obj.snow && obj.snow['3h']) return Math.round(obj.snow['3h'] * 10);\r\n        else if (!obj.snow || !('3h' in obj.snow)) return 0\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            weeklyForecastData,\r\n            weatherData\r\n        } = this.props;\r\n\r\n        if (weatherData === null) return (\r\n            <Link to='/' className='back'><span className='glyph2'>D</span></Link>\r\n        );\r\n        else if (!('city' in weeklyForecastData)) return <Loader/>;\r\n\r\n        const weatherDataForWeek = weeklyForecastData['list'].filter((item, index) => {\r\n            return index === 0 || index === 6 || index === 13 || index === 19 ||\r\n            index === 26 || index === 33 || index === 39\r\n        });\r\n\r\n        return (\r\n            <div className='weekly-forecast'>\r\n                <Link to='/'>\r\n                    <span className='glyph2'>D </span>\r\n                    <span className='back-label'>Back to daily forecast</span>\r\n                </Link>\r\n                <p>{weatherData.name}, {weatherData.sys.country}</p>\r\n                <ForecastTable\r\n                    weatherData={weatherDataForWeek}\r\n                    getDayOfWeek={this.getDayOfWeek}\r\n                    getDate={this.getDate}\r\n                    getPrecipitationData={this.getPrecipitationData}\r\n                />\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weeklyForecastData: state.weeklyForecastData,\r\n        weatherData: state.cityWeatherData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>  ( {\r\n    getWeeklyForecastData: data => dispatch({\r\n        type: \"GET_WEEKLY_FORECAST_DATA\",\r\n        weeklyForecastData: data\r\n    }),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(WeeklyForecast))","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport DailyForecast from './DailyForecast/DailyForecast';\nimport WeeklyForecast from './WeeklyForecast/WeeklyForecast';\nimport './App.css';\n\nconst  App = () => {\n    return (\n        <div className='App'>\n            <Route path='/' exact component={DailyForecast}/>\n            <Route path={`/weekly-forecast`} component={WeeklyForecast}/>\n        </div>\n    );\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './store/rootReducer'\nimport App from './App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}