{"version":3,"sources":["reducers/weatherDataReducer.js","reducers/weeklyForecastReducer.js","reducers/citiesReducer.js","store/rootReducer.js","App/DailyForecast/DetailForecast/DetailForecast.js","App/DailyForecast/DailyForecast.js","App/WeeklyForecast/ForecastTable/ForecastTable.js","App/WeeklyForecast/WeeklyForecast.js","App/App.js","serviceWorker.js","index.js"],"names":["weatherDataReducer","state","arguments","length","undefined","action","type","weatherData","weeklyForecastReducer","weeklyForecastData","citiesReducer","push","city","shift","rootReducer","cityWeatherData","cities","connect","_ref","message","react_default","a","createElement","className","name","sys","country","weather","description","Math","round","main","temp","pressure","humidity","temp_min","temp_max","visibility","wind","speed","clouds","all","react_router_dom","to","API_KEY","DailyForecast","value","getLastCities","_this","props","toLowerCase","indexOf","dispatchAddCity","deleteCity","dispatchDeleteCity","valueChangeHandler","event","setState","target","handlerKeyPress","_callee","regenerator_default","wrap","_context","prev","next","key","fetchWeatherData","fetchWeeklyForecast","stop","showCityForecast","_callee2","array","index","currentCity","_context2","filter","item","i","fetch","concat","response","json","this","dispatchGetWeatherData","id","dispatchGetWeeklyForecastData","_this2","_this$props","placeholder","onChange","onKeyPress","map","onClick","DailyForecast_DetailForecast_DetailForecast","Component","dispatch","data","ForecastTable","getDayOfWeek","getDate","getPrecipitationData","date","Date","scope","getFullYear","getMonth","WeeklyForecast","num","day","getDay","year","month","monthName","mon","monthDay","obj","snow","weatherDataForWeek","list","WeeklyForecast_ForecastTable_ForecastTable","App","react_router","path","exact","component","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f90d3df8.chunk.js","sourcesContent":["const weatherDataReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case \"GET_WEATHER_DATA\":\r\n            return action.weatherData\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weatherDataReducer","const weeklyForecastReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_WEEKLY_FORECAST_DATA\":\r\n            return action.weeklyForecastData\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weeklyForecastReducer","const citiesReducer = (state=[], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_CITY\":\r\n            state.push(action.city)\r\n            return state\r\n        case \"DELETE_CITY\":\r\n            state.shift()\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default citiesReducer","import weatherDataReducer from './../reducers/weatherDataReducer'\r\nimport weeklyForecastReducer from './../reducers/weeklyForecastReducer'\r\nimport citiesReducer from './../reducers/citiesReducer'\r\n\r\nconst rootReducer = (state={}, action) => {\r\n    return {\r\n        cityWeatherData: weatherDataReducer(state.cityWeatherData, action),\r\n        weeklyForecastData: weeklyForecastReducer(state.weeklyForecastData, action),\r\n        cities: citiesReducer(state.cities, action)\r\n    }  \r\n}\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './DetailForecast.css'\r\n\r\nconst DetailForecast = ({\r\n    weatherData,\r\n}) => {\r\n    if (weatherData.message === 'city not found') {\r\n        return (\r\n            <p>City ​​name is invalid. Please, try again.</p>\r\n        )   \r\n    }\r\n    return (\r\n        <div className='detail-forecast'>\r\n            <p className='city'>{weatherData.name}, {weatherData.sys.country}</p>\r\n            <p className='weather-description'>{weatherData.weather[0].description}</p>\r\n            <p className='temperature'>{Math.round(weatherData.main.temp - 273.15)}&#176;</p>\r\n            <div className='flex-container'>\r\n                <p>\r\n                    <span className='bold'>Pressure:</span><br/>\r\n                    <span className='glyph pressure'>N</span><br/>\r\n                    {weatherData.main.pressure} mb\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Humidity:</span><br/>\r\n                    <span className='glyph humidity'>C</span><br/> \r\n                    {weatherData.main.humidity} %\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Lowest temp.:</span><br/>\r\n                    <span className='glyph low-temp'>L</span><br/> \r\n                    {Math.round(weatherData.main.temp_min - 273.15)} &#176;C\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Highest temp.:</span><br/>\r\n                    <span className='glyph high-temp'>L</span><br/> \r\n                    {Math.round(weatherData.main.temp_max - 273.15)} &#176;C\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Visibility:</span><br/>\r\n                    <span className='glyph'>B</span><br/> \r\n                    {Math.round(weatherData.visibility / 1000)} km\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Wind:</span><br/>\r\n                    <span className='glyph wind'>I</span><br/> \r\n                    {weatherData.wind.speed} km/h\r\n                </p>\r\n                <p>\r\n                    <span className='bold'>Cloudiness:</span><br/>\r\n                    <span className='glyph cloudiness'>A</span><br/> \r\n                    {weatherData.clouds.all} %\r\n                </p>\r\n            </div>\r\n            <Link to='/weekly-forecast' className='show-weekly-forecast'>Show weekly forecast</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weatherData: state.cityWeatherData\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(DetailForecast)","import React, { Component } from 'react';\r\nimport DetailForecast from './DetailForecast/DetailForecast'\r\nimport { connect } from 'react-redux'\r\nimport './DailyForecast.css'\r\n\r\nconst API_KEY = '3202afc9748ff0709631c6435eeefc3a'\r\n\r\nclass DailyForecast extends Component {\r\n\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    async fetchWeatherData(city) {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\r\n        const weatherData = await response.json()\r\n\r\n        this.props.dispatchGetWeatherData(weatherData)\r\n    }\r\n\r\n    async fetchWeeklyForecast() {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${this.props.weatherData.id}&appid=${API_KEY}`)\r\n        const weeklyForecastData = await response.json()\r\n    \r\n        this.props.dispatchGetWeeklyForecastData(weeklyForecastData)\r\n    }\r\n\r\n    getLastCities = () => {\r\n        if(this.props.weatherData.name && (this.props.weatherData.name.toLowerCase().indexOf(this.state.value.toLowerCase()) !== -1)) {\r\n            if (this.props.cities.indexOf(this.state.value) === -1) {\r\n                this.props.dispatchAddCity(this.state.value)\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteCity = () => {\r\n        this.props.dispatchDeleteCity()\r\n    }\r\n\r\n    valueChangeHandler = event => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerKeyPress = async event => {\r\n        if (event.key === 'Enter' && this.state.value) {\r\n            await this.fetchWeatherData(this.state.value)\r\n            await this.getLastCities()\r\n            await this.fetchWeeklyForecast()\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    showCityForecast = async (array, index) => {\r\n        const currentCity = array.filter((item, i) => {\r\n            return i === index\r\n        })\r\n        await this.fetchWeatherData(currentCity)\r\n        await this.fetchWeeklyForecast()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weatherData,\r\n            cities\r\n        } = this.props\r\n        if (cities.length > 5) {\r\n            this.deleteCity()\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"input-group mt-3 mb-3\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder='City name'\r\n                        value={this.state.value}\r\n                        onChange={this.valueChangeHandler}\r\n                        onKeyPress={this.handlerKeyPress}\r\n                    />\r\n                </div>\r\n                <ul className='city-list'>\r\n                    {\r\n                        cities.map((city, index) => (\r\n                            <li key={city} onClick={() => this.showCityForecast(cities, index)}>            {city.toLowerCase()} \r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul> \r\n            {\r\n                weatherData && weatherData.message !== 'Nothing to geocode' ? <DetailForecast/> : null\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weatherData: state.cityWeatherData,\r\n        cities: state.cities\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetWeatherData: data => dispatch({\r\n        type: \"GET_WEATHER_DATA\",\r\n        weatherData: data\r\n    }),\r\n    dispatchGetWeeklyForecastData: data => dispatch({\r\n        type: \"GET_WEEKLY_FORECAST_DATA\",\r\n        weeklyForecastData: data\r\n    }),\r\n    dispatchAddCity: city => dispatch({\r\n        type: \"ADD_CITY\",\r\n        city\r\n    }),\r\n    dispatchDeleteCity: () => dispatch({\r\n        type: \"DELETE_CITY\"\r\n    }),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DailyForecast)","import React from 'react'\r\nimport './ForecastTable.css'\r\n\r\nconst ForecastTable = ({\r\n    weatherData,\r\n    getDayOfWeek,\r\n    getDate,\r\n    getPrecipitationData\r\n}) => {\r\n    const date = new Date()\r\n    return (\r\n        <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Day</th>\r\n                        <th scope=\"col\">Temperature<span className='table-glyph'>L</span></th>\r\n                        <th scope=\"col\">Pressure<span className='table-glyph pressure'>N</span></th>\r\n                        <th scope=\"col\">Humidity<span className='table-glyph humidity'>C</span></th>\r\n                        <th scope=\"col\">Wind<span className='table-glyph wind'>I</span></th>\r\n                        <th scope=\"col\">Precipitation<span className='glyph3'>A</span></th>\r\n                        <th scope=\"col\">Cloudiness<span className='table-glyph cloudiness'>A</span></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        weatherData.map((item, index) => (\r\n                            <tr key={index} className='tab-row'>\r\n                                <th>{getDayOfWeek(index)}\r\n                                    <small>{getDate(date.getFullYear(), date.getDate() + index + 1, date.getMonth())}</small><br/>\r\n                                    <small>{item.weather[0].description}</small>\r\n                                </th>\r\n                                <td>{Math.round(item.main.temp - 273.15)}&#176;</td>\r\n                                <td>{Math.round(item.main.pressure)} mb</td>\r\n                                <td>{item.main.humidity} %</td>\r\n                                <td>{item.wind.speed} km/h</td>\r\n                                <td>{getPrecipitationData(item)} cm</td>\r\n                                <td>{item.clouds.all} %</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    )\r\n}\r\n\r\nexport default ForecastTable","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ForecastTable from './ForecastTable/ForecastTable'\r\nimport './WeeklyForecast.css'\r\n\r\nclass WeeklyForecast extends Component {\r\n\r\n    getDayOfWeek = (num) => {\r\n        const date = new Date()\r\n        let day;\r\n        for (let i = 0; i < 7; i++) {\r\n            if (i === num) {\r\n                day = date.getDay() + i + 1;\r\n            }\r\n        }\r\n        if (day > 7) day = day - 7;\r\n\r\n        if(day === 1) return 'Monday' \r\n        else if(day === 2) return 'Tuesday'\r\n        else if(day === 3) return 'Wednesday'\r\n        else if(day === 4) return 'Thursday'\r\n        else if(day === 5) return 'Friday'\r\n        else if(day === 6) return 'Saturday'\r\n        else return 'Sunday'\r\n    }\r\n\r\n    getDate = (year, day, month) => {\r\n        const date = new Date(year, month, day)\r\n        const mon = date.getMonth() + 1\r\n        let monthDay = date.getDate()\r\n        let monthName;\r\n        for (let i = 1; i < 13; i++) {\r\n            if (mon === 1) monthName = 'JAN'\r\n            else if (mon === 2) monthName = 'FEB'\r\n            else if (mon === 3) monthName = 'MAR'\r\n            else if (mon === 4) monthName = 'APR'\r\n            else if (mon === 5) monthName = 'MAY'\r\n            else if (mon === 6) monthName = 'JUN'\r\n            else if (mon === 7) monthName = 'JUL'\r\n            else if (mon === 8) monthName = 'AUG'\r\n            else if (mon === 9) monthName = 'SEP'\r\n            else if (mon === 10) monthName = 'OCT'\r\n            else if (mon === 11) monthName = 'NOV'\r\n            else monthName = 'DEC'\r\n        }\r\n        if (monthDay < 10) monthDay = `0${monthDay}`\r\n        return `${monthName} ${monthDay}`\r\n    }\r\n\r\n    getPrecipitationData = (obj) => {\r\n        if (obj.snow && obj.snow['3h']) return Math.round(obj.snow['3h'] * 10)\r\n        else if (!obj.snow || !('3h' in obj.snow)) return 0\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyForecastData,\r\n            weatherData\r\n        } = this.props\r\n        \r\n        if (!('city' in weeklyForecastData)) return (\r\n            <Link to='/' className='back'><span className='glyph2'>D</span></Link>\r\n        )\r\n\r\n        const weatherDataForWeek = weeklyForecastData.list.filter((item, index) => {\r\n            return index === 0 || index === 6 || index === 13 || index === 19 ||\r\n            index === 26 || index === 33 || index === 39\r\n        })\r\n\r\n        return (\r\n            <div className='weekly-forecast'>\r\n                <Link to='/'>\r\n                    <span className='glyph2'>D </span>\r\n                    <span className='back-label'>Back to daily forecast</span>\r\n                </Link>\r\n                <p>{weatherData.name}, {weatherData.sys.country}</p>\r\n                <ForecastTable\r\n                    weatherData={weatherDataForWeek}\r\n                    getDayOfWeek={this.getDayOfWeek}\r\n                    getDate={this.getDate}\r\n                    getPrecipitationData={this.getPrecipitationData}\r\n                />\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weeklyForecastData: state.weeklyForecastData,\r\n        weatherData: state.cityWeatherData\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(WeeklyForecast)","import React from 'react'\nimport DailyForecast from './DailyForecast/DailyForecast'\nimport { Route } from 'react-router-dom'\nimport WeeklyForecast from './WeeklyForecast/WeeklyForecast'\nimport './App.css'\n\nconst  App = () => (\n    <div className='App'>\n        <Route path='/' exact component={DailyForecast}/>\n        <Route path='/weekly-forecast' component={WeeklyForecast}/>\n    </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './store/rootReducer'\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}